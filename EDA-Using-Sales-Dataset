-- Exploratory Data Analysis: 
-- 1. Explore All Columns in the Database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'gold.dim_customers';
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'gold.dim_products';
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'gold.fact_sales';


-- 2. Dimensions Exploration 
--  Explore All conutries in customer table 
SELECT DISTINCT country FROM sale_db.`gold.dim_customers`;

-- Explore All products categories and subcategory in product table 
SELECT DISTINCT category, subcategory FROM sale_db.`gold.dim_products`;

-- 3. Date Exploration 
-- Find the date of the first and last order 
-- How many years of sales are available 
SELECT 
MIN(order_date) AS first_order_date,  
MAX(order_date) AS last_order_date,
TIMESTAMPDIFF(YEAR, MIN(order_date), MAX(order_date)) AS order_range_years
FROM sale_db.`gold.fact_sales`;

-- Find youngest and the oldest customer 
SELECT 
MIN(birthdate) AS oldest_birthdate,  
MAX(birthdate) AS youngest_birthdate,
TIMESTAMPDIFF(YEAR, MIN(birthdate), CURDATE()) AS oldest_age, 
TIMESTAMPDIFF(YEAR, MAX(birthdate), CURDATE()) AS youngest_age
FROM sale_db.`gold.dim_customers`;

-- 4. Measure Exploration
-- Find the total sales
SELECT SUM(sales_amount) AS total_sales FROM sale_db.`gold.fact_sales`;

-- Find number of items sold
SELECT SUM(quantity) AS quanity_sold FROM sale_db.`gold.fact_sales`;

-- Find average selling price
SELECT AVG(price) AS avg_price FROM sale_db.`gold.fact_sales`;

-- Find total number of orders
SELECT COUNT(order_number) AS total_order FROM sale_db.`gold.fact_sales`;
SELECT COUNT(DISTINCT order_number) AS total_order FROM sale_db.`gold.fact_sales`;

-- Find total number of products
SELECT COUNT(product_key) AS total_products FROM sale_db.`gold.dim_products`;
SELECT COUNT(DISTINCT product_key) AS total_order FROM sale_db.`gold.dim_products`;

-- Find total number of customers 
SELECT COUNT(customer_id) AS total_customers FROM sale_db.`gold.dim_customers`;

-- Find the total number of customers that has placed an order
SELECT COUNT(customer_key) AS total_customers FROM sale_db.`gold.fact_sales`;


-- 5. Generate a Report that shows all key metrics 
SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM sale_db.`gold.fact_sales`
UNION ALL
SELECT 'Total Quantity' AS measure_name, SUM(quantity) AS measure_value FROM sale_db.`gold.fact_sales`
UNION ALL
SELECT 'Average Price' AS measure_name, AVG(price) AS measure_value FROM sale_db.`gold.fact_sales`
UNION ALL 
SELECT 'Total No. Quanity' AS measure_name, COUNT(quantity) AS measure_value FROM sale_db.`gold.fact_sales`
UNION ALL
SELECT 'Total No. Product' AS measure_name, Count(product_key) AS measure_value FROM sale_db.`gold.dim_products`
UNION ALL
SELECT 'Total No. Customers' AS measure_name, Count(customer_id) AS measure_value FROM sale_db.`gold.dim_customers`;

-- 6. Magnitude Analysis 
-- Find total customer by countris 
SELECT country,
COUNT(customer_id) AS total_customer 
FROM sale_db.`gold.dim_customers`
GROUP BY Country
ORDER BY total_customer DESC ;

-- Find total customer by gender
SELECT gender,
COUNT(customer_id) AS total_customer 
FROM sale_db.`gold.dim_customers`
GROUP BY gender
ORDER BY total_customer DESC;

-- Find total products by category 
SELECT category,
COUNT(product_key) AS total_products
FROM sale_db.`gold.dim_products`
GROUP BY category
ORDER BY total_products DESC;

-- What is the average costs in each category?
SELECT category,
Avg(cost) AS avg_cost
FROM sale_db.`gold.dim_products`
GROUP BY category
ORDER BY avg_cost DESC;

-- What is the total reveune generated for each category?
SELECT p.category,
SUM(s.sales_amount) total_revenue 
FROM sale_db.`gold.fact_sales` s
LEFT JOIN sale_db.`gold.dim_products` p
ON p.product_key = s.product_key
GROUP BY p.category
ORDER BY total_revenue DESC;

-- What is the total revenue generated by eah customer?
SELECT c.customer_key,
c.first_name,
c.last_name,
SUM(s.sales_amount) total_revenue 
FROM sale_db.`gold.fact_sales` s
LEFT JOIN sale_db.`gold.dim_customers` c
ON c.customer_key = s.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY total_revenue DESC;

-- What is the distribution of items sold across countries ?

SELECT c.country,
SUM(s.quantity) total_sold_items
FROM sale_db.`gold.fact_sales` s
LEFT JOIN sale_db.`gold.dim_customers` c
ON c.customer_key = s.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC;

-- Ranking Analysis 
-- Which 5 products generate the highest revene? 
SELECT p.product_name,
SUM(s.sales_amount) total_revenue 
FROM sale_db.`gold.fact_sales` s
LEFT JOIN sale_db.`gold.dim_products` p
ON p.product_key = s.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC LIMIT 5;

-- What are the 5 worst-performing product in term of sales?
SELECT p.product_name,
SUM(s.sales_amount) total_revenue 
FROM sale_db.`gold.fact_sales` s
LEFT JOIN sale_db.`gold.dim_products` p
ON p.product_key = s.product_key
GROUP BY p.product_name
ORDER BY total_revenue  LIMIT 5;
